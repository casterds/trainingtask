{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategyAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "strategyData",
          "type": "bytes"
        }
      ],
      "name": "executeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610ec4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631cff79cd1461003b5780635c84a37314610062575b600080fd5b61004e610049366004610306565b610077565b604051901515815260200160405180910390f35b610075610070366004610306565b6100e0565b005b6000836001600160a01b0316838360405161009392919061038b565b6000604051808303816000865af19150503d80600081146100d0576040519150601f19603f3d011682016040523d82523d6000602084013e6100d5565b606091505b509095945050505050565b826040516100ed906102e1565b6001600160a01b039091168152602001604051809103906000f080158015610119573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216918217815560405163cde99e6360e01b81529091829163cde99e6390610160908790879060040161039b565b600060405180830381865afa15801561017d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a5919081019061043a565b905060005b81518110156102d95760008282815181106101c7576101c7610520565b60209081029190910101518051604080830151905163e1f21c6760e01b81526001600160a01b03808c16600483015290921660248301526044820152909150339063e1f21c6790606401600060405180830381600087803b15801561022b57600080fd5b505af115801561023f573d6000803e3d6000fd5b5050825160408085015190516323b872dd60e01b81523360048201526001600160a01b038c811660248301526044820192909252911692506323b872dd91506064016020604051808303816000875af11580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190610536565b505080806102d19061055f565b9150506101aa565b505050505050565b6109088061058783390190565b6001600160a01b038116811461030357600080fd5b50565b60008060006040848603121561031b57600080fd5b8335610326816102ee565b9250602084013567ffffffffffffffff8082111561034357600080fd5b818601915086601f83011261035757600080fd5b81358181111561036657600080fd5b87602082850101111561037857600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610403576104036103ca565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610432576104326103ca565b604052919050565b6000602080838503121561044d57600080fd5b825167ffffffffffffffff8082111561046557600080fd5b818501915085601f83011261047957600080fd5b81518181111561048b5761048b6103ca565b610499848260051b01610409565b818152848101925060609182028401850191888311156104b857600080fd5b938501935b828510156105145780858a0312156104d55760008081fd5b6104dd6103e0565b85516104e8816102ee565b8152858701516104f7816102ee565b8188015260408681015190820152845293840193928501926104bd565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054857600080fd5b8151801515811461055857600080fd5b9392505050565b60006001820161057f57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b5060405161090838038061090883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610875806100936000396000f3fe6080604052600436106100295760003560e01c8063ab9716121461002e578063cde99e6314610043575b600080fd5b61004161003c366004610571565b610079565b005b34801561004f57600080fd5b5061006361005e3660046105ff565b610316565b6040516100709190610641565b60405180910390f35b6000546001600160a01b038481169116146100db5760405162461bcd60e51b815260206004820152601860248201527f546172676574206e6f742045786368616e676550726f7879000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014691906106a6565b60405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529192509088169063095ea7b3906044016020604051808303816000875af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906106bf565b6101c757600080fd5b6000846001600160a01b03163485856040516101e49291906106e8565b60006040518083038185875af1925050503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b505090508061026a5760405162461bcd60e51b815260206004820152601060248201526f14d5d05417d0d0531317d1905253115160821b60448201526064016100d2565b60405133904780156108fc02916000818181858888f19350505050158015610296573d6000803e3d6000fd5b506040516370a0823160e01b815230600482015282906001600160a01b038916906370a0823190602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906106a6565b61030b919061070e565b505050505050505050565b606061032360488361073b565b156103705760405162461bcd60e51b815260206004820152601e60248201527f5a525848656c7065723a20494e56414c49445f444154415f4c454e475448000060448201526064016100d2565b600061037d60488461074f565b90506000808267ffffffffffffffff81111561039b5761039b610763565b6040519080825280602002602001820160405280156103e657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816103b95790505b50905061040c604080516060810182526000808252602082018190529181019190915290565b60005b8481101561050457610422816048610779565b9350878488610432826014610798565b9261043f939291906107b0565b81019061044c91906107da565b6001600160a01b031682528787610464866014610798565b90610470876028610798565b9261047d939291906107b0565b81019061048a91906107da565b6001600160a01b0316602083015287876104a5866028610798565b906104b1876048610798565b926104be939291906107b0565b8101906104cb91906107f7565b6040830152825182908490839081106104e6576104e6610810565b602002602001018190525080806104fc90610826565b91505061040f565b50909695505050505050565b6001600160a01b038116811461052557600080fd5b50565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b60208301915083602082850101111561056a57600080fd5b9250929050565b60008060008060008060a0878903121561058a57600080fd5b863561059581610510565b955060208701356105a581610510565b945060408701356105b581610510565b935060608701356105c581610510565b9250608087013567ffffffffffffffff8111156105e157600080fd5b6105ed89828a01610528565b979a9699509497509295939492505050565b6000806020838503121561061257600080fd5b823567ffffffffffffffff81111561062957600080fd5b61063585828601610528565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561069957815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161065e565b5091979650505050505050565b6000602082840312156106b857600080fd5b5051919050565b6000602082840312156106d157600080fd5b815180151581146106e157600080fd5b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610720576107206106f8565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261074a5761074a610725565b500690565b60008261075e5761075e610725565b500490565b634e487b7160e01b600052604160045260246000fd5b6000816000190483118215151615610793576107936106f8565b500290565b600082198211156107ab576107ab6106f8565b500190565b600080858511156107c057600080fd5b838611156107cd57600080fd5b5050820193919092039150565b6000602082840312156107ec57600080fd5b81356106e181610510565b60006020828403121561080957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610838576108386106f8565b506001019056fea2646970667358221220e88463714b91bc08b6e88f90e1d623be243f7e1b6f656b059f646320513e670764736f6c634300080f0033a26469706673582212202293b66d43ecd747888cce4105176969d5a3f753b2c0a441b2d51f7c6447768764736f6c634300080f0033",
    "sourceMap": "273:737:5:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631cff79cd1461003b5780635c84a37314610062575b600080fd5b61004e610049366004610306565b610077565b604051901515815260200160405180910390f35b610075610070366004610306565b6100e0565b005b6000836001600160a01b0316838360405161009392919061038b565b6000604051808303816000865af19150503d80600081146100d0576040519150601f19603f3d011682016040523d82523d6000602084013e6100d5565b606091505b509095945050505050565b826040516100ed906102e1565b6001600160a01b039091168152602001604051809103906000f080158015610119573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216918217815560405163cde99e6360e01b81529091829163cde99e6390610160908790879060040161039b565b600060405180830381865afa15801561017d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a5919081019061043a565b905060005b81518110156102d95760008282815181106101c7576101c7610520565b60209081029190910101518051604080830151905163e1f21c6760e01b81526001600160a01b03808c16600483015290921660248301526044820152909150339063e1f21c6790606401600060405180830381600087803b15801561022b57600080fd5b505af115801561023f573d6000803e3d6000fd5b5050825160408085015190516323b872dd60e01b81523360048201526001600160a01b038c811660248301526044820192909252911692506323b872dd91506064016020604051808303816000875af11580156102a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c49190610536565b505080806102d19061055f565b9150506101aa565b505050505050565b6109088061058783390190565b6001600160a01b038116811461030357600080fd5b50565b60008060006040848603121561031b57600080fd5b8335610326816102ee565b9250602084013567ffffffffffffffff8082111561034357600080fd5b818601915086601f83011261035757600080fd5b81358181111561036657600080fd5b87602082850101111561037857600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610403576104036103ca565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610432576104326103ca565b604052919050565b6000602080838503121561044d57600080fd5b825167ffffffffffffffff8082111561046557600080fd5b818501915085601f83011261047957600080fd5b81518181111561048b5761048b6103ca565b610499848260051b01610409565b818152848101925060609182028401850191888311156104b857600080fd5b938501935b828510156105145780858a0312156104d55760008081fd5b6104dd6103e0565b85516104e8816102ee565b8152858701516104f7816102ee565b8188015260408681015190820152845293840193928501926104bd565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561054857600080fd5b8151801515811461055857600080fd5b9392505050565b60006001820161057f57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b5060405161090838038061090883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610875806100936000396000f3fe6080604052600436106100295760003560e01c8063ab9716121461002e578063cde99e6314610043575b600080fd5b61004161003c366004610571565b610079565b005b34801561004f57600080fd5b5061006361005e3660046105ff565b610316565b6040516100709190610641565b60405180910390f35b6000546001600160a01b038481169116146100db5760405162461bcd60e51b815260206004820152601860248201527f546172676574206e6f742045786368616e676550726f7879000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014691906106a6565b60405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529192509088169063095ea7b3906044016020604051808303816000875af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906106bf565b6101c757600080fd5b6000846001600160a01b03163485856040516101e49291906106e8565b60006040518083038185875af1925050503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b505090508061026a5760405162461bcd60e51b815260206004820152601060248201526f14d5d05417d0d0531317d1905253115160821b60448201526064016100d2565b60405133904780156108fc02916000818181858888f19350505050158015610296573d6000803e3d6000fd5b506040516370a0823160e01b815230600482015282906001600160a01b038916906370a0823190602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906106a6565b61030b919061070e565b505050505050505050565b606061032360488361073b565b156103705760405162461bcd60e51b815260206004820152601e60248201527f5a525848656c7065723a20494e56414c49445f444154415f4c454e475448000060448201526064016100d2565b600061037d60488461074f565b90506000808267ffffffffffffffff81111561039b5761039b610763565b6040519080825280602002602001820160405280156103e657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816103b95790505b50905061040c604080516060810182526000808252602082018190529181019190915290565b60005b8481101561050457610422816048610779565b9350878488610432826014610798565b9261043f939291906107b0565b81019061044c91906107da565b6001600160a01b031682528787610464866014610798565b90610470876028610798565b9261047d939291906107b0565b81019061048a91906107da565b6001600160a01b0316602083015287876104a5866028610798565b906104b1876048610798565b926104be939291906107b0565b8101906104cb91906107f7565b6040830152825182908490839081106104e6576104e6610810565b602002602001018190525080806104fc90610826565b91505061040f565b50909695505050505050565b6001600160a01b038116811461052557600080fd5b50565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b60208301915083602082850101111561056a57600080fd5b9250929050565b60008060008060008060a0878903121561058a57600080fd5b863561059581610510565b955060208701356105a581610510565b945060408701356105b581610510565b935060608701356105c581610510565b9250608087013567ffffffffffffffff8111156105e157600080fd5b6105ed89828a01610528565b979a9699509497509295939492505050565b6000806020838503121561061257600080fd5b823567ffffffffffffffff81111561062957600080fd5b61063585828601610528565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561069957815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161065e565b5091979650505050505050565b6000602082840312156106b857600080fd5b5051919050565b6000602082840312156106d157600080fd5b815180151581146106e157600080fd5b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610720576107206106f8565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261074a5761074a610725565b500690565b60008261075e5761075e610725565b500490565b634e487b7160e01b600052604160045260246000fd5b6000816000190483118215151615610793576107936106f8565b500290565b600082198211156107ab576107ab6106f8565b500190565b600080858511156107c057600080fd5b838611156107cd57600080fd5b5050820193919092039150565b6000602082840312156107ec57600080fd5b81356106e181610510565b60006020828403121561080957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610838576108386106f8565b506001019056fea2646970667358221220e88463714b91bc08b6e88f90e1d623be243f7e1b6f656b059f646320513e670764736f6c634300080f0033a26469706673582212202293b66d43ecd747888cce4105176969d5a3f753b2c0a441b2d51f7c6447768764736f6c634300080f0033",
    "sourceMap": "273:737:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:136:10;;;;;;:::i;:::-;;:::i;:::-;;;1046:14:12;;1039:22;1021:41;;1009:2;994:18;89:136:10;;;;;;;393:615:5;;;;;;:::i;:::-;;:::i;:::-;;89:136:10;161:12;199:8;-1:-1:-1;;;;;199:13:10;213:4;;199:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:33:10;;89:136;-1:-1:-1;;;;;89:136:10:o;393:615:5:-;531:15;517:30;;;;;:::i;:::-;-1:-1:-1;;;;;1513:32:12;;;1495:51;;1483:2;1468:18;517:30:5;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;508:6:5;:39;;-1:-1:-1;;;;;;508:39:5;-1:-1:-1;;;;;508:39:5;;;;;;;;;613:35;;-1:-1:-1;;;613:35:5;;508:6;;;;613:21;;:35;;635:12;;;;613:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;613:35:5;;;;;;;;;;;;:::i;:::-;585:63;;663:9;658:344;682:7;:14;678:1;:18;658:344;;;717:18;738:7;746:1;738:10;;;;;;;;:::i;:::-;;;;;;;;;;;815:9;;826;;;;;763:73;;-1:-1:-1;;;763:73:5;;-1:-1:-1;;;;;4495:15:12;;;763:73:5;;;4477:34:12;4547:15;;;4527:18;;;4520:43;4579:18;;;4572:34;738:10:5;;-1:-1:-1;769:10:5;;763:25;;4412:18:12;;763:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;857:9:5;;968;;;;;850:141;;-1:-1:-1;;;850:141:5;;898:10;850:141;;;4477:34:12;-1:-1:-1;;;;;4547:15:12;;;4527:18;;;4520:43;4579:18;;;4572:34;;;;850:30:5;;;-1:-1:-1;850:30:5;;-1:-1:-1;4412:18:12;;850:141:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;703:299;698:3;;;;;:::i;:::-;;;;658:344;;;;498:510;;393:615;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:12:-;-1:-1:-1;;;;;89:31:12;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:726::-;229:6;237;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;353:9;340:23;372:31;397:5;372:31;:::i;:::-;422:5;-1:-1:-1;478:2:12;463:18;;450:32;501:18;531:14;;;528:34;;;558:1;555;548:12;528:34;596:6;585:9;581:22;571:32;;641:7;634:4;630:2;626:13;622:27;612:55;;663:1;660;653:12;612:55;703:2;690:16;729:2;721:6;718:14;715:34;;;745:1;742;735:12;715:34;790:7;785:2;776:6;772:2;768:15;764:24;761:37;758:57;;;811:1;808;801:12;758:57;842:2;838;834:11;824:21;;864:6;854:16;;;;;150:726;;;;;:::o;1073:271::-;1256:6;1248;1243:3;1230:33;1212:3;1282:16;;1307:13;;;1282:16;1073:271;-1:-1:-1;1073:271:12:o;1557:388::-;1714:2;1703:9;1696:21;1753:6;1748:2;1737:9;1733:18;1726:34;1810:6;1802;1797:2;1786:9;1782:18;1769:48;1866:1;1837:22;;;1861:2;1833:31;;;1826:42;;;;1929:2;1908:15;;;-1:-1:-1;;1904:29:12;1889:45;1885:54;;1557:388;-1:-1:-1;1557:388:12:o;1950:127::-;2011:10;2006:3;2002:20;1999:1;1992:31;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2082:252;2153:2;2147:9;2195:4;2183:17;;2230:18;2215:34;;2251:22;;;2212:62;2209:88;;;2277:18;;:::i;:::-;2313:2;2306:22;2082:252;:::o;2339:275::-;2410:2;2404:9;2475:2;2456:13;;-1:-1:-1;;2452:27:12;2440:40;;2510:18;2495:34;;2531:22;;;2492:62;2489:88;;;2557:18;;:::i;:::-;2593:2;2586:22;2339:275;;-1:-1:-1;2339:275:12:o;2619:1481::-;2740:6;2771:2;2814;2802:9;2793:7;2789:23;2785:32;2782:52;;;2830:1;2827;2820:12;2782:52;2863:9;2857:16;2892:18;2933:2;2925:6;2922:14;2919:34;;;2949:1;2946;2939:12;2919:34;2987:6;2976:9;2972:22;2962:32;;3032:7;3025:4;3021:2;3017:13;3013:27;3003:55;;3054:1;3051;3044:12;3003:55;3083:2;3077:9;3105:2;3101;3098:10;3095:36;;;3111:18;;:::i;:::-;3151:36;3183:2;3178;3175:1;3171:10;3167:19;3151:36;:::i;:::-;3221:15;;;3252:12;;;;-1:-1:-1;3283:4:12;3322:11;;;3314:20;;3310:29;;;3351:19;;;3348:39;;;3383:1;3380;3373:12;3348:39;3407:11;;;;3427:643;3443:6;3438:3;3435:15;3427:643;;;3523:2;3517:3;3508:7;3504:17;3500:26;3497:116;;;3567:1;3596:2;3592;3585:14;3497:116;3639:21;;:::i;:::-;3694:3;3688:10;3711:33;3736:7;3711:33;:::i;:::-;3757:22;;3813:12;;;3807:19;3839:33;3807:19;3839:33;:::i;:::-;3892:14;;;3885:31;3939:2;3983:12;;;3977:19;3961:14;;;3954:43;4010:18;;3460:12;;;;4048;;;;3427:643;;;-1:-1:-1;4089:5:12;2619:1481;-1:-1:-1;;;;;;;2619:1481:12:o;4105:127::-;4166:10;4161:3;4157:20;4154:1;4147:31;4197:4;4194:1;4187:15;4221:4;4218:1;4211:15;4617:277;4684:6;4737:2;4725:9;4716:7;4712:23;4708:32;4705:52;;;4753:1;4750;4743:12;4705:52;4785:9;4779:16;4838:5;4831:13;4824:21;4817:5;4814:32;4804:60;;4860:1;4857;4850:12;4804:60;4883:5;4617:277;-1:-1:-1;;;4617:277:12:o;4899:232::-;4938:3;4959:17;;;4956:140;;5018:10;5013:3;5009:20;5006:1;4999:31;5053:4;5050:1;5043:15;5081:4;5078:1;5071:15;4956:140;-1:-1:-1;5123:1:12;5112:13;;4899:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execute(address,bytes)": "1cff79cd",
    "executeStrategy(address,bytes)": "5c84a373"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"strategyData\",\"type\":\"bytes\"}],\"name\":\"executeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SingleStalkStrategy.sol\":\"SingleStalkStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0e32f809512d4daabd7a42ab9b5fbb49361beaa8bf8ae18f6931ae6fdb6c37b0\",\"urls\":[\"bzz-raw://d97d85555d1497b8b61aaf6c6f648a6cacfb0efd4ca2796deb8b990b92543c25\",\"dweb:/ipfs/QmSs7M9e968XBUZ2NND81kh4ZfSZuivmbyUwmMHTHcn4b9\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/SingleStalkStrategy.sol\":{\"keccak256\":\"0x701bbfd28c8257f83fb5547404eed6319cd40287164876f93308d4ba1e61fcdc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://cb12c0b7f9442af6905b45c85f1f10a52512d16073ce0646ebaf3c37b8ace82d\",\"dweb:/ipfs/QmTzFJqFPAcJnTqNvYWGAnsVrGFqB3Bi43gDFsu7XMLHnT\"]},\"src/Vault.sol\":{\"keccak256\":\"0xa3c585b2fb7659d2bafc011449b9f6323dde1507d52f34fee38670f86df80021\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://41690dd78ed7e13a76f021666b1c4874cee21659e28af456806fabf8d98c9102\",\"dweb:/ipfs/QmY6Meux7hm1LYaqeV24Tz3XviE8zhCeTrznT1AMjT2zNo\"]},\"src/VaultFactory.sol\":{\"keccak256\":\"0x8054717357a413797649f7cd9aac6528c3dea132821b7be0f594f4b0b885e7d7\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bf502115407a5d0cf364e0a3e9f066e1515bacf30b9b693ac3cbc2265eded435\",\"dweb:/ipfs/QmTpaQrq7ii3SN2CsK2TCyhn5QzpXzbdmWQvV48FynybRJ\"]},\"src/helpers/ZRXHelper.sol\":{\"keccak256\":\"0x209a5c203c802c22cdb67088ddbe709bd6e9d9df8c39b0568587169b403f2e00\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aff71f711f3fdcd3dcc08224171111e630f553ba2fd258fba48f4618268c5a09\",\"dweb:/ipfs/QmVXPphoh9WUDGYHDo29749LjAUZ2kLZMAgu4PYh5MMx9A\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xfc89bfb534c352930f25e54d604da2e3d0799b9604db7dbadb4fce06843e04fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e6e80f084b5d2b15605783e8a966c984b59301f4821f55ed4c0ce0b0d4365a8\",\"dweb:/ipfs/QmfNATpYzZZkR53TqKoWUjSQMeNKsd8n7yZPXb1Fkv7WCk\"]},\"src/interfaces/IVaultFactory.sol\":{\"keccak256\":\"0x8a0898cfb1fc8fc541457e196d423e8a2e6faad325d86bcb29133bd47498c6a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ecaf037082187a22f8afe9f069135846e0832b0f83c498b9e6269a61f359db7b\",\"dweb:/ipfs/QmeMbGgD7vVYBqoBzJQdSUor5C1qPp4QRRbkFLj17GjmVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategyAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "strategyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeStrategy"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SingleStalkStrategy.sol": "SingleStalkStrategy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x0e32f809512d4daabd7a42ab9b5fbb49361beaa8bf8ae18f6931ae6fdb6c37b0",
        "urls": [
          "bzz-raw://d97d85555d1497b8b61aaf6c6f648a6cacfb0efd4ca2796deb8b990b92543c25",
          "dweb:/ipfs/QmSs7M9e968XBUZ2NND81kh4ZfSZuivmbyUwmMHTHcn4b9"
        ],
        "license": null
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/SingleStalkStrategy.sol": {
        "keccak256": "0x701bbfd28c8257f83fb5547404eed6319cd40287164876f93308d4ba1e61fcdc",
        "urls": [
          "bzz-raw://cb12c0b7f9442af6905b45c85f1f10a52512d16073ce0646ebaf3c37b8ace82d",
          "dweb:/ipfs/QmTzFJqFPAcJnTqNvYWGAnsVrGFqB3Bi43gDFsu7XMLHnT"
        ],
        "license": "UNLICENSED"
      },
      "src/Vault.sol": {
        "keccak256": "0xa3c585b2fb7659d2bafc011449b9f6323dde1507d52f34fee38670f86df80021",
        "urls": [
          "bzz-raw://41690dd78ed7e13a76f021666b1c4874cee21659e28af456806fabf8d98c9102",
          "dweb:/ipfs/QmY6Meux7hm1LYaqeV24Tz3XviE8zhCeTrznT1AMjT2zNo"
        ],
        "license": "UNLICENSED"
      },
      "src/VaultFactory.sol": {
        "keccak256": "0x8054717357a413797649f7cd9aac6528c3dea132821b7be0f594f4b0b885e7d7",
        "urls": [
          "bzz-raw://bf502115407a5d0cf364e0a3e9f066e1515bacf30b9b693ac3cbc2265eded435",
          "dweb:/ipfs/QmTpaQrq7ii3SN2CsK2TCyhn5QzpXzbdmWQvV48FynybRJ"
        ],
        "license": "UNLICENSED"
      },
      "src/helpers/ZRXHelper.sol": {
        "keccak256": "0x209a5c203c802c22cdb67088ddbe709bd6e9d9df8c39b0568587169b403f2e00",
        "urls": [
          "bzz-raw://aff71f711f3fdcd3dcc08224171111e630f553ba2fd258fba48f4618268c5a09",
          "dweb:/ipfs/QmVXPphoh9WUDGYHDo29749LjAUZ2kLZMAgu4PYh5MMx9A"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0xfc89bfb534c352930f25e54d604da2e3d0799b9604db7dbadb4fce06843e04fc",
        "urls": [
          "bzz-raw://8e6e80f084b5d2b15605783e8a966c984b59301f4821f55ed4c0ce0b0d4365a8",
          "dweb:/ipfs/QmfNATpYzZZkR53TqKoWUjSQMeNKsd8n7yZPXb1Fkv7WCk"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IVaultFactory.sol": {
        "keccak256": "0x8a0898cfb1fc8fc541457e196d423e8a2e6faad325d86bcb29133bd47498c6a5",
        "urls": [
          "bzz-raw://ecaf037082187a22f8afe9f069135846e0832b0f83c498b9e6269a61f359db7b",
          "dweb:/ipfs/QmeMbGgD7vVYBqoBzJQdSUor5C1qPp4QRRbkFLj17GjmVL"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SingleStalkStrategy.sol",
    "id": 1350,
    "exportedSymbols": {
      "IERC20": [
        95
      ],
      "IStrategy": [
        1990
      ],
      "PairData": [
        1743
      ],
      "SingleStalkStrategy": [
        1349
      ],
      "Vault": [
        1628
      ],
      "ZRXHelper": [
        1969
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:972:5",
    "nodes": [
      {
        "id": 1250,
        "nodeType": "PragmaDirective",
        "src": "39:23:5",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 1252,
        "nodeType": "ImportDirective",
        "src": "64:55:5",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/interfaces/IERC20.sol",
        "file": "forge-std/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1350,
        "sourceUnit": 96,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1251,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 95,
              "src": "72:6:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1255,
        "nodeType": "ImportDirective",
        "src": "121:60:5",
        "nodes": [],
        "absolutePath": "src/helpers/ZRXHelper.sol",
        "file": "./helpers/ZRXHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1350,
        "sourceUnit": 1970,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1253,
              "name": "PairData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1743,
              "src": "129:8:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 1254,
              "name": "ZRXHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1969,
              "src": "139:9:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1257,
        "nodeType": "ImportDirective",
        "src": "183:53:5",
        "nodes": [],
        "absolutePath": "src/interfaces/IStrategy.sol",
        "file": "./interfaces/IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1350,
        "sourceUnit": 1991,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1256,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1990,
              "src": "191:9:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1259,
        "nodeType": "ImportDirective",
        "src": "237:34:5",
        "nodes": [],
        "absolutePath": "src/Vault.sol",
        "file": "./Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1350,
        "sourceUnit": 1629,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1258,
              "name": "Vault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1628,
              "src": "245:5:5",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1349,
        "nodeType": "ContractDefinition",
        "src": "273:737:5",
        "nodes": [
          {
            "id": 1264,
            "nodeType": "VariableDeclaration",
            "src": "321:25:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "helper",
            "nameLocation": "340:6:5",
            "scope": 1349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZRXHelper_$1969",
              "typeString": "contract ZRXHelper"
            },
            "typeName": {
              "id": 1263,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1262,
                "name": "ZRXHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1969,
                "src": "321:9:5"
              },
              "referencedDeclaration": 1969,
              "src": "321:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                "typeString": "contract ZRXHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1266,
            "nodeType": "VariableDeclaration",
            "src": "352:18:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "controller",
            "nameLocation": "360:10:5",
            "scope": 1349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1265,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "352:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1268,
            "nodeType": "VariableDeclaration",
            "src": "376:10:5",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "data",
            "nameLocation": "382:4:5",
            "scope": 1349,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 1267,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "376:5:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1348,
            "nodeType": "FunctionDefinition",
            "src": "393:615:5",
            "nodes": [],
            "body": {
              "id": 1347,
              "nodeType": "Block",
              "src": "498:510:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1275,
                      "name": "helper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1264,
                      "src": "508:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                        "typeString": "contract ZRXHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1279,
                          "name": "strategyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1270,
                          "src": "531:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "517:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ZRXHelper_$1969_$",
                          "typeString": "function (address) returns (contract ZRXHelper)"
                        },
                        "typeName": {
                          "id": 1277,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1276,
                            "name": "ZRXHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1969,
                            "src": "521:9:5"
                          },
                          "referencedDeclaration": 1969,
                          "src": "521:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                            "typeString": "contract ZRXHelper"
                          }
                        }
                      },
                      "id": 1280,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "517:30:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                        "typeString": "contract ZRXHelper"
                      }
                    },
                    "src": "508:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                      "typeString": "contract ZRXHelper"
                    }
                  },
                  "id": 1282,
                  "nodeType": "ExpressionStatement",
                  "src": "508:39:5"
                },
                {
                  "assignments": [
                    1284
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1284,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "563:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "558:9:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1283,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "558:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1286,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "570:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "558:17:5"
                },
                {
                  "assignments": [
                    1291
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1291,
                      "mutability": "mutable",
                      "name": "batchPD",
                      "nameLocation": "603:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1347,
                      "src": "585:25:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PairData_$1743_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PairData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1289,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1288,
                            "name": "PairData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1743,
                            "src": "585:8:5"
                          },
                          "referencedDeclaration": 1743,
                          "src": "585:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$1743_storage_ptr",
                            "typeString": "struct PairData"
                          }
                        },
                        "id": 1290,
                        "nodeType": "ArrayTypeName",
                        "src": "585:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairData_$1743_storage_$dyn_storage_ptr",
                          "typeString": "struct PairData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1296,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1294,
                        "name": "strategyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1272,
                        "src": "635:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 1292,
                        "name": "helper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1264,
                        "src": "613:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZRXHelper_$1969",
                          "typeString": "contract ZRXHelper"
                        }
                      },
                      "id": 1293,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeSwapData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1883,
                      "src": "613:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_PairData_$1743_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (struct PairData memory[] memory)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "613:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PairData_$1743_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PairData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "585:63:5"
                },
                {
                  "body": {
                    "id": 1345,
                    "nodeType": "Block",
                    "src": "703:299:5",
                    "statements": [
                      {
                        "assignments": [
                          1310
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1310,
                            "mutability": "mutable",
                            "name": "pd",
                            "nameLocation": "733:2:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1345,
                            "src": "717:18:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                              "typeString": "struct PairData"
                            },
                            "typeName": {
                              "id": 1309,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1308,
                                "name": "PairData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1743,
                                "src": "717:8:5"
                              },
                              "referencedDeclaration": 1743,
                              "src": "717:8:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$1743_storage_ptr",
                                "typeString": "struct PairData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1314,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1311,
                            "name": "batchPD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1291,
                            "src": "738:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairData_$1743_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct PairData memory[] memory"
                            }
                          },
                          "id": 1313,
                          "indexExpression": {
                            "id": 1312,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1298,
                            "src": "746:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "738:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                            "typeString": "struct PairData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "717:31:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1322,
                                  "name": "strategyAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1270,
                                  "src": "797:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1321,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "789:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1320,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "789:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "789:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1324,
                                "name": "pd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1310,
                                "src": "815:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                                  "typeString": "struct PairData memory"
                                }
                              },
                              "id": 1325,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1738,
                              "src": "815:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1326,
                                "name": "pd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1310,
                                "src": "826:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                                  "typeString": "struct PairData memory"
                                }
                              },
                              "id": 1327,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "826:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1316,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "769:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "769:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1315,
                                "name": "Vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1628,
                                "src": "763:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Vault_$1628_$",
                                  "typeString": "type(contract Vault)"
                                }
                              },
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "763:17:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$1628",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 1319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1583,
                            "src": "763:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "763:73:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1329,
                        "nodeType": "ExpressionStatement",
                        "src": "763:73:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1335,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "898:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "898:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1339,
                                  "name": "strategyAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1270,
                                  "src": "934:15:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1338,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "926:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1337,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "926:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1340,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "926:24:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1341,
                                "name": "pd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1310,
                                "src": "968:2:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                                  "typeString": "struct PairData memory"
                                }
                              },
                              "id": 1342,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1742,
                              "src": "968:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 1331,
                                    "name": "pd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1310,
                                    "src": "857:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairData_$1743_memory_ptr",
                                      "typeString": "struct PairData memory"
                                    }
                                  },
                                  "id": 1332,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token0",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1738,
                                  "src": "857:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1330,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 95,
                                "src": "850:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$95_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "850:17:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$95",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1334,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 76,
                            "src": "850:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1343,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "850:141:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1344,
                        "nodeType": "ExpressionStatement",
                        "src": "850:141:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1301,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1298,
                      "src": "678:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1302,
                        "name": "batchPD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "682:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairData_$1743_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PairData memory[] memory"
                        }
                      },
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "682:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "678:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1346,
                  "initializationExpression": {
                    "assignments": [
                      1298
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1298,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "671:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1346,
                        "src": "663:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1297,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "663:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1300,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "675:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "663:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1306,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "698:3:5",
                      "subExpression": {
                        "id": 1305,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1298,
                        "src": "698:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1307,
                    "nodeType": "ExpressionStatement",
                    "src": "698:3:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "658:344:5"
                }
              ]
            },
            "functionSelector": "5c84a373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeStrategy",
            "nameLocation": "402:15:5",
            "parameters": {
              "id": 1273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1270,
                  "mutability": "mutable",
                  "name": "strategyAddress",
                  "nameLocation": "435:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "427:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1269,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "427:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1272,
                  "mutability": "mutable",
                  "name": "strategyData",
                  "nameLocation": "475:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1348,
                  "src": "460:27:5",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1271,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "417:71:5"
            },
            "returnParameters": {
              "id": 1274,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "498:0:5"
            },
            "scope": 1349,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1260,
              "name": "IStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1990,
              "src": "305:9:5"
            },
            "id": 1261,
            "nodeType": "InheritanceSpecifier",
            "src": "305:9:5"
          }
        ],
        "canonicalName": "SingleStalkStrategy",
        "contractDependencies": [
          1969
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1349,
          1990
        ],
        "name": "SingleStalkStrategy",
        "nameLocation": "282:19:5",
        "scope": 1350,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 5
}