{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "execute",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategyAddress",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "strategyData",
          "type": "bytes"
        }
      ],
      "name": "executeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610f61806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80631cff79cd1461003b5780635c84a37314610062575b600080fd5b61004e6100493660046102f0565b610077565b604051901515815260200160405180910390f35b6100756100703660046102f0565b6100e0565b005b6000836001600160a01b03168383604051610093929190610375565b6000604051808303816000865af19150503d80600081146100d0576040519150601f19603f3d011682016040523d82523d6000602084013e6100d5565b606091505b509095945050505050565b826040516100ed906102cb565b6001600160a01b039091168152602001604051809103906000f080158015610119573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216918217815560405163cde99e6360e01b81529091829163cde99e63906101609087908790600401610385565b600060405180830381865afa15801561017d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a59190810190610424565b905060005b81518110156102c35760008282815181106101c7576101c761050a565b60209081029190910101518051604080830151905163e1f21c6760e01b81523060048201526001600160a01b0390921660248301526044820152909150339063e1f21c6790606401600060405180830381600087803b15801561022957600080fd5b505af115801561023d573d6000803e3d6000fd5b5050600054835160208501516040516355cb8b0960e11b81526001600160a01b03909316945063ab971612935061027d9230903390600190600401610520565b600060405180830381600087803b15801561029757600080fd5b505af11580156102ab573d6000803e3d6000fd5b505050505080806102bb906105fc565b9150506101aa565b505050505050565b6109088061062483390190565b6001600160a01b03811681146102ed57600080fd5b50565b60008060006040848603121561030557600080fd5b8335610310816102d8565b9250602084013567ffffffffffffffff8082111561032d57600080fd5b818601915086601f83011261034157600080fd5b81358181111561035057600080fd5b87602082850101111561036257600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156103ed576103ed6103b4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561041c5761041c6103b4565b604052919050565b6000602080838503121561043757600080fd5b825167ffffffffffffffff8082111561044f57600080fd5b818501915085601f83011261046357600080fd5b815181811115610475576104756103b4565b610483848260051b016103f3565b818152848101925060609182028401850191888311156104a257600080fd5b938501935b828510156104fe5780858a0312156104bf5760008081fd5b6104c76103ca565b85516104d2816102d8565b8152858701516104e1816102d8565b8188015260408681015190820152845293840193928501926104a7565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0386811682528581166020808401919091528582166040840152908416606083015260a0608083015282546000918291600181811c908281168061056c57607f831692505b848310810361058957634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156105a857600181146105be576105e9565b60ff198616825284151560051b820197506105e9565b60008b81526020902060005b868110156105e3578154848201529085019088016105ca565b83019850505b50959d9c50505050505050505050505050565b60006001820161061c57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b5060405161090838038061090883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610875806100936000396000f3fe6080604052600436106100295760003560e01c8063ab9716121461002e578063cde99e6314610043575b600080fd5b61004161003c366004610571565b610079565b005b34801561004f57600080fd5b5061006361005e3660046105ff565b610316565b6040516100709190610641565b60405180910390f35b6000546001600160a01b038481169116146100db5760405162461bcd60e51b815260206004820152601860248201527f546172676574206e6f742045786368616e676550726f7879000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014691906106a6565b60405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529192509088169063095ea7b3906044016020604051808303816000875af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906106bf565b6101c757600080fd5b6000846001600160a01b03163485856040516101e49291906106e8565b60006040518083038185875af1925050503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b505090508061026a5760405162461bcd60e51b815260206004820152601060248201526f14d5d05417d0d0531317d1905253115160821b60448201526064016100d2565b60405133904780156108fc02916000818181858888f19350505050158015610296573d6000803e3d6000fd5b506040516370a0823160e01b815230600482015282906001600160a01b038916906370a0823190602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906106a6565b61030b919061070e565b505050505050505050565b606061032360488361073b565b156103705760405162461bcd60e51b815260206004820152601e60248201527f5a525848656c7065723a20494e56414c49445f444154415f4c454e475448000060448201526064016100d2565b600061037d60488461074f565b90506000808267ffffffffffffffff81111561039b5761039b610763565b6040519080825280602002602001820160405280156103e657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816103b95790505b50905061040c604080516060810182526000808252602082018190529181019190915290565b60005b8481101561050457610422816048610779565b9350878488610432826014610798565b9261043f939291906107b0565b81019061044c91906107da565b6001600160a01b031682528787610464866014610798565b90610470876028610798565b9261047d939291906107b0565b81019061048a91906107da565b6001600160a01b0316602083015287876104a5866028610798565b906104b1876048610798565b926104be939291906107b0565b8101906104cb91906107f7565b6040830152825182908490839081106104e6576104e6610810565b602002602001018190525080806104fc90610826565b91505061040f565b50909695505050505050565b6001600160a01b038116811461052557600080fd5b50565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b60208301915083602082850101111561056a57600080fd5b9250929050565b60008060008060008060a0878903121561058a57600080fd5b863561059581610510565b955060208701356105a581610510565b945060408701356105b581610510565b935060608701356105c581610510565b9250608087013567ffffffffffffffff8111156105e157600080fd5b6105ed89828a01610528565b979a9699509497509295939492505050565b6000806020838503121561061257600080fd5b823567ffffffffffffffff81111561062957600080fd5b61063585828601610528565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561069957815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161065e565b5091979650505050505050565b6000602082840312156106b857600080fd5b5051919050565b6000602082840312156106d157600080fd5b815180151581146106e157600080fd5b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610720576107206106f8565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261074a5761074a610725565b500690565b60008261075e5761075e610725565b500490565b634e487b7160e01b600052604160045260246000fd5b6000816000190483118215151615610793576107936106f8565b500290565b600082198211156107ab576107ab6106f8565b500190565b600080858511156107c057600080fd5b838611156107cd57600080fd5b5050820193919092039150565b6000602082840312156107ec57600080fd5b81356106e181610510565b60006020828403121561080957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610838576108386106f8565b506001019056fea2646970667358221220e88463714b91bc08b6e88f90e1d623be243f7e1b6f656b059f646320513e670764736f6c634300080f0033a2646970667358221220cc34cc3f3ab6c4f233c0e2f140a8127a227f1eedb6a9c4cb6fa1ccbd0d8c37f164736f6c634300080f0033",
    "sourceMap": "273:761:19:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c80631cff79cd1461003b5780635c84a37314610062575b600080fd5b61004e6100493660046102f0565b610077565b604051901515815260200160405180910390f35b6100756100703660046102f0565b6100e0565b005b6000836001600160a01b03168383604051610093929190610375565b6000604051808303816000865af19150503d80600081146100d0576040519150601f19603f3d011682016040523d82523d6000602084013e6100d5565b606091505b509095945050505050565b826040516100ed906102cb565b6001600160a01b039091168152602001604051809103906000f080158015610119573d6000803e3d6000fd5b50600080546001600160a01b0319166001600160a01b0392909216918217815560405163cde99e6360e01b81529091829163cde99e63906101609087908790600401610385565b600060405180830381865afa15801561017d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a59190810190610424565b905060005b81518110156102c35760008282815181106101c7576101c761050a565b60209081029190910101518051604080830151905163e1f21c6760e01b81523060048201526001600160a01b0390921660248301526044820152909150339063e1f21c6790606401600060405180830381600087803b15801561022957600080fd5b505af115801561023d573d6000803e3d6000fd5b5050600054835160208501516040516355cb8b0960e11b81526001600160a01b03909316945063ab971612935061027d9230903390600190600401610520565b600060405180830381600087803b15801561029757600080fd5b505af11580156102ab573d6000803e3d6000fd5b505050505080806102bb906105fc565b9150506101aa565b505050505050565b6109088061062483390190565b6001600160a01b03811681146102ed57600080fd5b50565b60008060006040848603121561030557600080fd5b8335610310816102d8565b9250602084013567ffffffffffffffff8082111561032d57600080fd5b818601915086601f83011261034157600080fd5b81358181111561035057600080fd5b87602082850101111561036257600080fd5b6020830194508093505050509250925092565b8183823760009101908152919050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156103ed576103ed6103b4565b60405290565b604051601f8201601f1916810167ffffffffffffffff8111828210171561041c5761041c6103b4565b604052919050565b6000602080838503121561043757600080fd5b825167ffffffffffffffff8082111561044f57600080fd5b818501915085601f83011261046357600080fd5b815181811115610475576104756103b4565b610483848260051b016103f3565b818152848101925060609182028401850191888311156104a257600080fd5b938501935b828510156104fe5780858a0312156104bf5760008081fd5b6104c76103ca565b85516104d2816102d8565b8152858701516104e1816102d8565b8188015260408681015190820152845293840193928501926104a7565b50979650505050505050565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b0386811682528581166020808401919091528582166040840152908416606083015260a0608083015282546000918291600181811c908281168061056c57607f831692505b848310810361058957634e487b7160e01b86526022600452602486fd5b60a0880183905260c088018180156105a857600181146105be576105e9565b60ff198616825284151560051b820197506105e9565b60008b81526020902060005b868110156105e3578154848201529085019088016105ca565b83019850505b50959d9c50505050505050505050505050565b60006001820161061c57634e487b7160e01b600052601160045260246000fd5b506001019056fe608060405234801561001057600080fd5b5060405161090838038061090883398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610875806100936000396000f3fe6080604052600436106100295760003560e01c8063ab9716121461002e578063cde99e6314610043575b600080fd5b61004161003c366004610571565b610079565b005b34801561004f57600080fd5b5061006361005e3660046105ff565b610316565b6040516100709190610641565b60405180910390f35b6000546001600160a01b038481169116146100db5760405162461bcd60e51b815260206004820152601860248201527f546172676574206e6f742045786368616e676550726f7879000000000000000060448201526064015b60405180910390fd5b6040516370a0823160e01b81523060048201526000906001600160a01b038716906370a0823190602401602060405180830381865afa158015610122573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014691906106a6565b60405163095ea7b360e01b81526001600160a01b03878116600483015260001960248301529192509088169063095ea7b3906044016020604051808303816000875af115801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be91906106bf565b6101c757600080fd5b6000846001600160a01b03163485856040516101e49291906106e8565b60006040518083038185875af1925050503d8060008114610221576040519150601f19603f3d011682016040523d82523d6000602084013e610226565b606091505b505090508061026a5760405162461bcd60e51b815260206004820152601060248201526f14d5d05417d0d0531317d1905253115160821b60448201526064016100d2565b60405133904780156108fc02916000818181858888f19350505050158015610296573d6000803e3d6000fd5b506040516370a0823160e01b815230600482015282906001600160a01b038916906370a0823190602401602060405180830381865afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061030191906106a6565b61030b919061070e565b505050505050505050565b606061032360488361073b565b156103705760405162461bcd60e51b815260206004820152601e60248201527f5a525848656c7065723a20494e56414c49445f444154415f4c454e475448000060448201526064016100d2565b600061037d60488461074f565b90506000808267ffffffffffffffff81111561039b5761039b610763565b6040519080825280602002602001820160405280156103e657816020015b60408051606081018252600080825260208083018290529282015282526000199092019101816103b95790505b50905061040c604080516060810182526000808252602082018190529181019190915290565b60005b8481101561050457610422816048610779565b9350878488610432826014610798565b9261043f939291906107b0565b81019061044c91906107da565b6001600160a01b031682528787610464866014610798565b90610470876028610798565b9261047d939291906107b0565b81019061048a91906107da565b6001600160a01b0316602083015287876104a5866028610798565b906104b1876048610798565b926104be939291906107b0565b8101906104cb91906107f7565b6040830152825182908490839081106104e6576104e6610810565b602002602001018190525080806104fc90610826565b91505061040f565b50909695505050505050565b6001600160a01b038116811461052557600080fd5b50565b60008083601f84011261053a57600080fd5b50813567ffffffffffffffff81111561055257600080fd5b60208301915083602082850101111561056a57600080fd5b9250929050565b60008060008060008060a0878903121561058a57600080fd5b863561059581610510565b955060208701356105a581610510565b945060408701356105b581610510565b935060608701356105c581610510565b9250608087013567ffffffffffffffff8111156105e157600080fd5b6105ed89828a01610528565b979a9699509497509295939492505050565b6000806020838503121561061257600080fd5b823567ffffffffffffffff81111561062957600080fd5b61063585828601610528565b90969095509350505050565b602080825282518282018190526000919060409081850190868401855b8281101561069957815180516001600160a01b039081168652878201511687860152850151858501526060909301929085019060010161065e565b5091979650505050505050565b6000602082840312156106b857600080fd5b5051919050565b6000602082840312156106d157600080fd5b815180151581146106e157600080fd5b9392505050565b8183823760009101908152919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610720576107206106f8565b500390565b634e487b7160e01b600052601260045260246000fd5b60008261074a5761074a610725565b500690565b60008261075e5761075e610725565b500490565b634e487b7160e01b600052604160045260246000fd5b6000816000190483118215151615610793576107936106f8565b500290565b600082198211156107ab576107ab6106f8565b500190565b600080858511156107c057600080fd5b838611156107cd57600080fd5b5050820193919092039150565b6000602082840312156107ec57600080fd5b81356106e181610510565b60006020828403121561080957600080fd5b5035919050565b634e487b7160e01b600052603260045260246000fd5b600060018201610838576108386106f8565b506001019056fea2646970667358221220e88463714b91bc08b6e88f90e1d623be243f7e1b6f656b059f646320513e670764736f6c634300080f0033a2646970667358221220cc34cc3f3ab6c4f233c0e2f140a8127a227f1eedb6a9c4cb6fa1ccbd0d8c37f164736f6c634300080f0033",
    "sourceMap": "273:761:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;89:136:23;;;;;;:::i;:::-;;:::i;:::-;;;1046:14:26;;1039:22;1021:41;;1009:2;994:18;89:136:23;;;;;;;370:662:19;;;;;;:::i;:::-;;:::i;:::-;;89:136:23;161:12;199:8;-1:-1:-1;;;;;199:13:23;213:4;;199:19;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;185:33:23;;89:136;-1:-1:-1;;;;;89:136:23:o;370:662:19:-;508:15;494:30;;;;;:::i;:::-;-1:-1:-1;;;;;1513:32:26;;;1495:51;;1483:2;1468:18;494:30:19;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;485:6:19;:39;;-1:-1:-1;;;;;;485:39:19;-1:-1:-1;;;;;485:39:19;;;;;;;;;590:35;;-1:-1:-1;;;590:35:19;;485:6;;;;590:21;;:35;;612:12;;;;590:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;590:35:19;;;;;;;;;;;;:::i;:::-;562:63;;640:9;635:391;659:7;:14;655:1;:18;635:391;;;694:18;715:7;723:1;715:10;;;;;;;;:::i;:::-;;;;;;;;;;;781:9;;792;;;;;740:62;;-1:-1:-1;;;740:62:19;;774:4;740:62;;;4634:34:26;-1:-1:-1;;;;;4704:15:26;;;4684:18;;;4677:43;4736:18;;;4729:34;715:10:19;;-1:-1:-1;746:10:19;;740:25;;4569:18:26;;740:62:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;816:6:19;;857:9;;892;;;;816:199;;-1:-1:-1;;;816:199:19;;-1:-1:-1;;;;;816:6:19;;;;-1:-1:-1;816:16:19;;-1:-1:-1;816:199:19;;928:4;;967:10;;816:6;;:199;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;680:346;675:3;;;;;:::i;:::-;;;;635:391;;;;475:557;;370:662;;;:::o;-1:-1:-1:-;;;;;;;;:::o;14:131:26:-;-1:-1:-1;;;;;89:31:26;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:726::-;229:6;237;245;298:2;286:9;277:7;273:23;269:32;266:52;;;314:1;311;304:12;266:52;353:9;340:23;372:31;397:5;372:31;:::i;:::-;422:5;-1:-1:-1;478:2:26;463:18;;450:32;501:18;531:14;;;528:34;;;558:1;555;548:12;528:34;596:6;585:9;581:22;571:32;;641:7;634:4;630:2;626:13;622:27;612:55;;663:1;660;653:12;612:55;703:2;690:16;729:2;721:6;718:14;715:34;;;745:1;742;735:12;715:34;790:7;785:2;776:6;772:2;768:15;764:24;761:37;758:57;;;811:1;808;801:12;758:57;842:2;838;834:11;824:21;;864:6;854:16;;;;;150:726;;;;;:::o;1073:271::-;1256:6;1248;1243:3;1230:33;1212:3;1282:16;;1307:13;;;1282:16;1073:271;-1:-1:-1;1073:271:26:o;1711:388::-;1868:2;1857:9;1850:21;1907:6;1902:2;1891:9;1887:18;1880:34;1964:6;1956;1951:2;1940:9;1936:18;1923:48;2020:1;1991:22;;;2015:2;1987:31;;;1980:42;;;;2083:2;2062:15;;;-1:-1:-1;;2058:29:26;2043:45;2039:54;;1711:388;-1:-1:-1;1711:388:26:o;2104:127::-;2165:10;2160:3;2156:20;2153:1;2146:31;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2236:253;2308:2;2302:9;2350:4;2338:17;;2385:18;2370:34;;2406:22;;;2367:62;2364:88;;;2432:18;;:::i;:::-;2468:2;2461:22;2236:253;:::o;2494:275::-;2565:2;2559:9;2630:2;2611:13;;-1:-1:-1;;2607:27:26;2595:40;;2665:18;2650:34;;2686:22;;;2647:62;2644:88;;;2712:18;;:::i;:::-;2748:2;2741:22;2494:275;;-1:-1:-1;2494:275:26:o;2774:1483::-;2896:6;2927:2;2970;2958:9;2949:7;2945:23;2941:32;2938:52;;;2986:1;2983;2976:12;2938:52;3019:9;3013:16;3048:18;3089:2;3081:6;3078:14;3075:34;;;3105:1;3102;3095:12;3075:34;3143:6;3132:9;3128:22;3118:32;;3188:7;3181:4;3177:2;3173:13;3169:27;3159:55;;3210:1;3207;3200:12;3159:55;3239:2;3233:9;3261:2;3257;3254:10;3251:36;;;3267:18;;:::i;:::-;3307:36;3339:2;3334;3331:1;3327:10;3323:19;3307:36;:::i;:::-;3377:15;;;3408:12;;;;-1:-1:-1;3439:4:26;3478:11;;;3470:20;;3466:29;;;3507:19;;;3504:39;;;3539:1;3536;3529:12;3504:39;3563:11;;;;3583:644;3599:6;3594:3;3591:15;3583:644;;;3679:2;3673:3;3664:7;3660:17;3656:26;3653:116;;;3723:1;3752:2;3748;3741:14;3653:116;3795:22;;:::i;:::-;3851:3;3845:10;3868:33;3893:7;3868:33;:::i;:::-;3914:22;;3970:12;;;3964:19;3996:33;3964:19;3996:33;:::i;:::-;4049:14;;;4042:31;4096:2;4140:12;;;4134:19;4118:14;;;4111:43;4167:18;;3616:12;;;;4205;;;;3583:644;;;-1:-1:-1;4246:5:26;2774:1483;-1:-1:-1;;;;;;;2774:1483:26:o;4262:127::-;4323:10;4318:3;4314:20;4311:1;4304:31;4354:4;4351:1;4344:15;4378:4;4375:1;4368:15;4899:1619;-1:-1:-1;;;;;5241:15:26;;;5223:34;;5314:15;;;5276:2;5294:18;;;5287:43;;;;5366:15;;;5361:2;5346:18;;5339:43;5418:15;;;5413:2;5398:18;;5391:43;5203:3;5465;5450:19;;5443:32;5522:13;;5166:4;;;;5212:1;5600:18;;;;5653;;;;5680:61;;5734:4;5726:6;5722:17;5712:27;;5680:61;5787:2;5779:6;5776:14;5756:18;5753:38;5750:165;;-1:-1:-1;;;5814:33:26;;5870:4;5867:1;5860:15;5900:4;5821:3;5888:17;5750:165;5985:3;5970:19;;1643;;;1686:14;;;6014:18;6041:128;;;;6183:1;6178:314;;;;6007:485;;6041:128;-1:-1:-1;;6074:24:26;;6062:37;;6142:14;;6135:22;6132:1;6128:30;6119:40;;;-1:-1:-1;6041:128:26;;6178:314;4846:1;4839:14;;;4883:4;4870:18;;6272:1;6286:165;6300:6;6297:1;6294:13;6286:165;;;6378:14;;6365:11;;;6358:35;6421:16;;;;6315:10;;6286:165;;;6471:11;;;-1:-1:-1;;6007:485:26;-1:-1:-1;6509:3:26;;4899:1619;-1:-1:-1;;;;;;;;;;;;;4899:1619:26:o;6523:232::-;6562:3;6583:17;;;6580:140;;6642:10;6637:3;6633:20;6630:1;6623:31;6677:4;6674:1;6667:15;6705:4;6702:1;6695:15;6580:140;-1:-1:-1;6747:1:26;6736:13;;6523:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "execute(address,bytes)": "1cff79cd",
    "executeStrategy(address,bytes)": "5c84a373"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"execute\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategyAddress\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"strategyData\",\"type\":\"bytes\"}],\"name\":\"executeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/SingleStalkStrategy.sol\":\"SingleStalkStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/interfaces/IERC20.sol\":{\"keccak256\":\"0x0e32f809512d4daabd7a42ab9b5fbb49361beaa8bf8ae18f6931ae6fdb6c37b0\",\"urls\":[\"bzz-raw://d97d85555d1497b8b61aaf6c6f648a6cacfb0efd4ca2796deb8b990b92543c25\",\"dweb:/ipfs/QmSs7M9e968XBUZ2NND81kh4ZfSZuivmbyUwmMHTHcn4b9\"]},\"lib/solmate/src/mixins/ERC4626.sol\":{\"keccak256\":\"0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1\",\"dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\",\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9\",\"dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi\"]},\"lib/solmate/src/utils/SafeTransferLib.sol\":{\"keccak256\":\"0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4\",\"dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU\"]},\"src/SingleStalkStrategy.sol\":{\"keccak256\":\"0xeed54fa5be8c55ab570cfeab13a45a970505eb57d2b0a8ba5f94562877eaaab9\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://16f5193555647239ad3657cbab68b2be9fff74ea089c8b32b85f7ed50a60be12\",\"dweb:/ipfs/QmaYZTi37iHy2RMZpb8fNryy6XyGRm4o545n8NgPkRSj3i\"]},\"src/Vault.sol\":{\"keccak256\":\"0x29a69af638b031cd1008d120ec8b0d08b76893d4eb0ab05784bba10cadb5287c\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://01419bdcf6127ff8bd3cdeee66981815e041ad184006bd78f51fe70928bfc96e\",\"dweb:/ipfs/Qmf6XGgeWqAyodWFgjNFTkJRHjSs5iYXaSGN4KFvjd5jdX\"]},\"src/VaultFactory.sol\":{\"keccak256\":\"0x2a249ea8867d8f99d44183cb58afd40b02fa2a7e9bda65ee339ad2fc3e6ba905\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0c7b363994e41f770e525bad9eaea473da915fc6c8ba0957a8d69bfd9688bc83\",\"dweb:/ipfs/QmZM6Xfsn35D1wxpHRV2JsjjCB1Euf8HThFDeLWzcRP41V\"]},\"src/helpers/ZRXHelper.sol\":{\"keccak256\":\"0x209a5c203c802c22cdb67088ddbe709bd6e9d9df8c39b0568587169b403f2e00\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://aff71f711f3fdcd3dcc08224171111e630f553ba2fd258fba48f4618268c5a09\",\"dweb:/ipfs/QmVXPphoh9WUDGYHDo29749LjAUZ2kLZMAgu4PYh5MMx9A\"]},\"src/interfaces/IStrategy.sol\":{\"keccak256\":\"0xfc89bfb534c352930f25e54d604da2e3d0799b9604db7dbadb4fce06843e04fc\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8e6e80f084b5d2b15605783e8a966c984b59301f4821f55ed4c0ce0b0d4365a8\",\"dweb:/ipfs/QmfNATpYzZZkR53TqKoWUjSQMeNKsd8n7yZPXb1Fkv7WCk\"]},\"src/interfaces/IVaultFactory.sol\":{\"keccak256\":\"0x8a0898cfb1fc8fc541457e196d423e8a2e6faad325d86bcb29133bd47498c6a5\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ecaf037082187a22f8afe9f069135846e0832b0f83c498b9e6269a61f359db7b\",\"dweb:/ipfs/QmeMbGgD7vVYBqoBzJQdSUor5C1qPp4QRRbkFLj17GjmVL\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "execute",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategyAddress",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "strategyData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "executeStrategy"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/SingleStalkStrategy.sol": "SingleStalkStrategy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/interfaces/IERC20.sol": {
        "keccak256": "0x0e32f809512d4daabd7a42ab9b5fbb49361beaa8bf8ae18f6931ae6fdb6c37b0",
        "urls": [
          "bzz-raw://d97d85555d1497b8b61aaf6c6f648a6cacfb0efd4ca2796deb8b990b92543c25",
          "dweb:/ipfs/QmSs7M9e968XBUZ2NND81kh4ZfSZuivmbyUwmMHTHcn4b9"
        ],
        "license": null
      },
      "lib/solmate/src/mixins/ERC4626.sol": {
        "keccak256": "0xa404f6f45bd53f24a90cc5ffe95e16b52e3f2dfd88f0d7a1edcb35f815919a7b",
        "urls": [
          "bzz-raw://9f01e32d713e05cc58c1563e9938a1c5e096b1da9f52c7ea8424f2317b94adc1",
          "dweb:/ipfs/QmVt5SsbA3kezM5pyovupN7iZLy6QVqY5qQRZKLFqxKJUs"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10",
        "urls": [
          "bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35",
          "dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x1b62af9baf5b8e991ed7531bc87f45550ba9d61e8dbff5caf237ccaf3a3fd843",
        "urls": [
          "bzz-raw://b7b38b977c5305b18ceefbeed4c9ceaaaefa419b520de62de6604ea661f8c0a9",
          "dweb:/ipfs/QmecMRzgfMyDVa2pvBqMMDLYBappaj7Aa3qcMoQYEQrhWi"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/utils/SafeTransferLib.sol": {
        "keccak256": "0xbadf3d708cf532b12f75f78a1d423135954b63774a6d4ba15914a551d348db8a",
        "urls": [
          "bzz-raw://88ac8256bd520d1b8e6f9c4ac9e8777bffdc4a6c8afb1a848f596665779a55b4",
          "dweb:/ipfs/QmXx7X1dxe6f5VM91vgQ5BA4r2eF97GWDcQDrgHytcvfjU"
        ],
        "license": "AGPL-3.0-only"
      },
      "src/SingleStalkStrategy.sol": {
        "keccak256": "0xeed54fa5be8c55ab570cfeab13a45a970505eb57d2b0a8ba5f94562877eaaab9",
        "urls": [
          "bzz-raw://16f5193555647239ad3657cbab68b2be9fff74ea089c8b32b85f7ed50a60be12",
          "dweb:/ipfs/QmaYZTi37iHy2RMZpb8fNryy6XyGRm4o545n8NgPkRSj3i"
        ],
        "license": "UNLICENSED"
      },
      "src/Vault.sol": {
        "keccak256": "0x29a69af638b031cd1008d120ec8b0d08b76893d4eb0ab05784bba10cadb5287c",
        "urls": [
          "bzz-raw://01419bdcf6127ff8bd3cdeee66981815e041ad184006bd78f51fe70928bfc96e",
          "dweb:/ipfs/Qmf6XGgeWqAyodWFgjNFTkJRHjSs5iYXaSGN4KFvjd5jdX"
        ],
        "license": "UNLICENSED"
      },
      "src/VaultFactory.sol": {
        "keccak256": "0x2a249ea8867d8f99d44183cb58afd40b02fa2a7e9bda65ee339ad2fc3e6ba905",
        "urls": [
          "bzz-raw://0c7b363994e41f770e525bad9eaea473da915fc6c8ba0957a8d69bfd9688bc83",
          "dweb:/ipfs/QmZM6Xfsn35D1wxpHRV2JsjjCB1Euf8HThFDeLWzcRP41V"
        ],
        "license": "UNLICENSED"
      },
      "src/helpers/ZRXHelper.sol": {
        "keccak256": "0x209a5c203c802c22cdb67088ddbe709bd6e9d9df8c39b0568587169b403f2e00",
        "urls": [
          "bzz-raw://aff71f711f3fdcd3dcc08224171111e630f553ba2fd258fba48f4618268c5a09",
          "dweb:/ipfs/QmVXPphoh9WUDGYHDo29749LjAUZ2kLZMAgu4PYh5MMx9A"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IStrategy.sol": {
        "keccak256": "0xfc89bfb534c352930f25e54d604da2e3d0799b9604db7dbadb4fce06843e04fc",
        "urls": [
          "bzz-raw://8e6e80f084b5d2b15605783e8a966c984b59301f4821f55ed4c0ce0b0d4365a8",
          "dweb:/ipfs/QmfNATpYzZZkR53TqKoWUjSQMeNKsd8n7yZPXb1Fkv7WCk"
        ],
        "license": "UNLICENSED"
      },
      "src/interfaces/IVaultFactory.sol": {
        "keccak256": "0x8a0898cfb1fc8fc541457e196d423e8a2e6faad325d86bcb29133bd47498c6a5",
        "urls": [
          "bzz-raw://ecaf037082187a22f8afe9f069135846e0832b0f83c498b9e6269a61f359db7b",
          "dweb:/ipfs/QmeMbGgD7vVYBqoBzJQdSUor5C1qPp4QRRbkFLj17GjmVL"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/SingleStalkStrategy.sol",
    "id": 25771,
    "exportedSymbols": {
      "IERC20": [
        24507
      ],
      "IStrategy": [
        26275
      ],
      "PairData": [
        26028
      ],
      "SingleStalkStrategy": [
        25770
      ],
      "Vault": [
        25915
      ],
      "ZRXHelper": [
        26254
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:996:19",
    "nodes": [
      {
        "id": 25662,
        "nodeType": "PragmaDirective",
        "src": "39:23:19",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 25664,
        "nodeType": "ImportDirective",
        "src": "64:55:19",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/interfaces/IERC20.sol",
        "file": "forge-std/interfaces/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25771,
        "sourceUnit": 24508,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25663,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 24507,
              "src": "72:6:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25667,
        "nodeType": "ImportDirective",
        "src": "121:60:19",
        "nodes": [],
        "absolutePath": "src/helpers/ZRXHelper.sol",
        "file": "./helpers/ZRXHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25771,
        "sourceUnit": 26255,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25665,
              "name": "PairData",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26028,
              "src": "129:8:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 25666,
              "name": "ZRXHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26254,
              "src": "139:9:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25669,
        "nodeType": "ImportDirective",
        "src": "183:53:19",
        "nodes": [],
        "absolutePath": "src/interfaces/IStrategy.sol",
        "file": "./interfaces/IStrategy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25771,
        "sourceUnit": 26276,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25668,
              "name": "IStrategy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26275,
              "src": "191:9:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25671,
        "nodeType": "ImportDirective",
        "src": "237:34:19",
        "nodes": [],
        "absolutePath": "src/Vault.sol",
        "file": "./Vault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 25771,
        "sourceUnit": 25916,
        "symbolAliases": [
          {
            "foreign": {
              "id": 25670,
              "name": "Vault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 25915,
              "src": "245:5:19",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 25770,
        "nodeType": "ContractDefinition",
        "src": "273:761:19",
        "nodes": [
          {
            "id": 25676,
            "nodeType": "VariableDeclaration",
            "src": "321:25:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "helper",
            "nameLocation": "340:6:19",
            "scope": 25770,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ZRXHelper_$26254",
              "typeString": "contract ZRXHelper"
            },
            "typeName": {
              "id": 25675,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 25674,
                "name": "ZRXHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26254,
                "src": "321:9:19"
              },
              "referencedDeclaration": 26254,
              "src": "321:9:19",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                "typeString": "contract ZRXHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25678,
            "nodeType": "VariableDeclaration",
            "src": "353:10:19",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "data",
            "nameLocation": "359:4:19",
            "scope": 25770,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes_storage",
              "typeString": "bytes"
            },
            "typeName": {
              "id": 25677,
              "name": "bytes",
              "nodeType": "ElementaryTypeName",
              "src": "353:5:19",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes_storage_ptr",
                "typeString": "bytes"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 25769,
            "nodeType": "FunctionDefinition",
            "src": "370:662:19",
            "nodes": [],
            "body": {
              "id": 25768,
              "nodeType": "Block",
              "src": "475:557:19",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 25691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 25685,
                      "name": "helper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25676,
                      "src": "485:6:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                        "typeString": "contract ZRXHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 25689,
                          "name": "strategyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25680,
                          "src": "508:15:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "494:13:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_ZRXHelper_$26254_$",
                          "typeString": "function (address) returns (contract ZRXHelper)"
                        },
                        "typeName": {
                          "id": 25687,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25686,
                            "name": "ZRXHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26254,
                            "src": "498:9:19"
                          },
                          "referencedDeclaration": 26254,
                          "src": "498:9:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                            "typeString": "contract ZRXHelper"
                          }
                        }
                      },
                      "id": 25690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "494:30:19",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                        "typeString": "contract ZRXHelper"
                      }
                    },
                    "src": "485:39:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                      "typeString": "contract ZRXHelper"
                    }
                  },
                  "id": 25692,
                  "nodeType": "ExpressionStatement",
                  "src": "485:39:19"
                },
                {
                  "assignments": [
                    25694
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25694,
                      "mutability": "mutable",
                      "name": "flag",
                      "nameLocation": "540:4:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25768,
                      "src": "535:9:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 25693,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "535:4:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25696,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 25695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "547:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "535:17:19"
                },
                {
                  "assignments": [
                    25701
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 25701,
                      "mutability": "mutable",
                      "name": "batchPD",
                      "nameLocation": "580:7:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 25768,
                      "src": "562:25:19",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PairData_$26028_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct PairData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 25699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 25698,
                            "name": "PairData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 26028,
                            "src": "562:8:19"
                          },
                          "referencedDeclaration": 26028,
                          "src": "562:8:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$26028_storage_ptr",
                            "typeString": "struct PairData"
                          }
                        },
                        "id": 25700,
                        "nodeType": "ArrayTypeName",
                        "src": "562:10:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairData_$26028_storage_$dyn_storage_ptr",
                          "typeString": "struct PairData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 25706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 25704,
                        "name": "strategyData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25682,
                        "src": "612:12:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 25702,
                        "name": "helper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25676,
                        "src": "590:6:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                          "typeString": "contract ZRXHelper"
                        }
                      },
                      "id": 25703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeSwapData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26168,
                      "src": "590:21:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bytes_memory_ptr_$returns$_t_array$_t_struct$_PairData_$26028_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (bytes memory) pure external returns (struct PairData memory[] memory)"
                      }
                    },
                    "id": 25705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "590:35:19",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_PairData_$26028_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct PairData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "562:63:19"
                },
                {
                  "body": {
                    "id": 25766,
                    "nodeType": "Block",
                    "src": "680:346:19",
                    "statements": [
                      {
                        "assignments": [
                          25720
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 25720,
                            "mutability": "mutable",
                            "name": "pd",
                            "nameLocation": "710:2:19",
                            "nodeType": "VariableDeclaration",
                            "scope": 25766,
                            "src": "694:18:19",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                              "typeString": "struct PairData"
                            },
                            "typeName": {
                              "id": 25719,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 25718,
                                "name": "PairData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 26028,
                                "src": "694:8:19"
                              },
                              "referencedDeclaration": 26028,
                              "src": "694:8:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$26028_storage_ptr",
                                "typeString": "struct PairData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 25724,
                        "initialValue": {
                          "baseExpression": {
                            "id": 25721,
                            "name": "batchPD",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25701,
                            "src": "715:7:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairData_$26028_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct PairData memory[] memory"
                            }
                          },
                          "id": 25723,
                          "indexExpression": {
                            "id": 25722,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25708,
                            "src": "723:1:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "715:10:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                            "typeString": "struct PairData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "694:31:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 25732,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "774:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SingleStalkStrategy_$25770",
                                    "typeString": "contract SingleStalkStrategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SingleStalkStrategy_$25770",
                                    "typeString": "contract SingleStalkStrategy"
                                  }
                                ],
                                "id": 25731,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "766:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25730,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "766:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "766:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 25734,
                                "name": "pd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25720,
                                "src": "781:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                                  "typeString": "struct PairData memory"
                                }
                              },
                              "id": 25735,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "token0",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26023,
                              "src": "781:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 25736,
                                "name": "pd",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25720,
                                "src": "792:2:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                                  "typeString": "struct PairData memory"
                                }
                              },
                              "id": 25737,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 26027,
                              "src": "792:9:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 25726,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "746:3:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 25727,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "746:10:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25725,
                                "name": "Vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 25915,
                                "src": "740:5:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Vault_$25915_$",
                                  "typeString": "type(contract Vault)"
                                }
                              },
                              "id": 25728,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "740:17:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vault_$25915",
                                "typeString": "contract Vault"
                              }
                            },
                            "id": 25729,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 25870,
                            "src": "740:25:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 25738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "740:62:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25739,
                        "nodeType": "ExpressionStatement",
                        "src": "740:62:19"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 25744,
                                    "name": "pd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25720,
                                    "src": "857:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                                      "typeString": "struct PairData memory"
                                    }
                                  },
                                  "id": 25745,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token0",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26023,
                                  "src": "857:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25743,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24507,
                                "src": "850:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$24507_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 25746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "850:17:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$24507",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 25748,
                                    "name": "pd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 25720,
                                    "src": "892:2:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairData_$26028_memory_ptr",
                                      "typeString": "struct PairData memory"
                                    }
                                  },
                                  "id": 25749,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token1",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26025,
                                  "src": "892:9:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25747,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24507,
                                "src": "885:6:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$24507_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 25750,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "885:17:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$24507",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 25753,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "928:4:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SingleStalkStrategy_$25770",
                                    "typeString": "contract SingleStalkStrategy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SingleStalkStrategy_$25770",
                                    "typeString": "contract SingleStalkStrategy"
                                  }
                                ],
                                "id": 25752,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "920:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 25751,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "920:7:19",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25754,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "920:13:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 25759,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "967:3:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 25760,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "967:10:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 25758,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "959:7:19",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 25757,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "959:7:19",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 25761,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "959:19:19",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 25756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "951:8:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 25755,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "951:8:19",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 25762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "951:28:19",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 25763,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25678,
                              "src": "997:4:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$24507",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$24507",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "id": 25740,
                              "name": "helper",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 25676,
                              "src": "816:6:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ZRXHelper_$26254",
                                "typeString": "contract ZRXHelper"
                              }
                            },
                            "id": 25742,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fillQuote",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26253,
                            "src": "816:16:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_contract$_IERC20_$24507_$_t_contract$_IERC20_$24507_$_t_address_$_t_address_payable_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (contract IERC20,contract IERC20,address,address payable,bytes memory) payable external"
                            }
                          },
                          "id": 25764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "816:199:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 25765,
                        "nodeType": "ExpressionStatement",
                        "src": "816:199:19"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 25714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 25711,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25708,
                      "src": "655:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 25712,
                        "name": "batchPD",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25701,
                        "src": "659:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairData_$26028_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct PairData memory[] memory"
                        }
                      },
                      "id": 25713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "659:14:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "655:18:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 25767,
                  "initializationExpression": {
                    "assignments": [
                      25708
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 25708,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "648:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 25767,
                        "src": "640:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 25707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 25710,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 25709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "652:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "640:13:19"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 25716,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "675:3:19",
                      "subExpression": {
                        "id": 25715,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25708,
                        "src": "675:1:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 25717,
                    "nodeType": "ExpressionStatement",
                    "src": "675:3:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "635:391:19"
                }
              ]
            },
            "functionSelector": "5c84a373",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executeStrategy",
            "nameLocation": "379:15:19",
            "parameters": {
              "id": 25683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 25680,
                  "mutability": "mutable",
                  "name": "strategyAddress",
                  "nameLocation": "412:15:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25769,
                  "src": "404:23:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "404:7:19",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25682,
                  "mutability": "mutable",
                  "name": "strategyData",
                  "nameLocation": "452:12:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 25769,
                  "src": "437:27:19",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 25681,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "437:5:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:71:19"
            },
            "returnParameters": {
              "id": 25684,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:0:19"
            },
            "scope": 25770,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 25672,
              "name": "IStrategy",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 26275,
              "src": "305:9:19"
            },
            "id": 25673,
            "nodeType": "InheritanceSpecifier",
            "src": "305:9:19"
          }
        ],
        "canonicalName": "SingleStalkStrategy",
        "contractDependencies": [
          26254
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          25770,
          26275
        ],
        "name": "SingleStalkStrategy",
        "nameLocation": "282:19:19",
        "scope": 25771,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 19
}